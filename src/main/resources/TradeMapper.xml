<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="global.sesoc.tp.dao.TradeMapper">
  	
  	<!-- 새 거래 등록 -->
  	<insert id="insertTrade" parameterType="Trade">
  		insert into Trade (
  			userBn
  			, tradeNo
  			, tradeDiv
  			, customerNo
  			, itemCode
  			, tradeQuantity
  			, tradePayable
  			, tradeReceivable
  			, tradeTotal
  			, paymentDiv
  			, tradeNote
  		) values (
  			#{userBn}
  			, tradeNo_seq.nextval
  			, #{tradeDiv}
  			, (SELECT customerNo FROM customer WHERE customerName = '${customerNo}')
  			, (SELECT itemCode FROM items WHERE itemName = '${itemCode}')
  			, #{tradeQuantity}
  			, #{tradePayable}
  			, #{tradeReceivable}
  			, #{tradeTotal}
  			, #{paymentDiv}
  			, #{tradeNote}
  		)
  	</insert>
  	
  	<!-- 전체 거래 리스트 -->
  	<select id="tradeList" resultType="Trade">
  		select 
  		t.userBn userBn
  		, t.tradeNo tradeNo
  		, td.tradeExp tradeDiv
  		, c.customerName customerNo
  		, i.itemName itemCode
  		, pd.paymentExp paymentDiv
  		, t.tradeNote tradeNote
  		, t.tradeQuantity tradeQuantity
  		, t.tradePayable tradePayable
  		, t.tradeReceivable tradeReceivable
  		, t.tradeTotal tradeTotal
  		, TO_CHAR(t.tradeIndate, 'YYYY-MM-DD') tradeIndate
  			from trade t, tb_tradeDiv td, customer c, items i, tb_paymentDiv pd
  			where t.userBn = #{userBn}
  			and
  			td.tradeDiv = t.tradeDiv
  			and
  			c.customerNo = t.customerNo
			and
			i.itemCode = t.itemCode
			and
			pd.paymentDiv = t.paymentDiv
  			order by tradeNo DESC
  	</select>
  	
  	<!-- 거래 번호로 거래 조회 -->
  	<select id="selectTrade" parameterType="int" resultType="Trade">
  		select 
  		t.userBn userBn
  		, t.tradeNo tradeNo
  		, td.tradeExp tradeDiv
  		, c.customerName customerNo
  		, i.itemName itemCode
  		, pd.paymentExp paymentDiv
  		, t.tradeNote tradeNote
  		, TO_CHAR(t.tradeQuantity, '9,999,999,999') tradeQuantity
  		, TO_CHAR(t.tradePayable, '9,999,999,999') tradePayable
  		, TO_CHAR(t.tradeReceivable, '9,999,999,999') tradeReceivable
  		, TO_CHAR(t.tradeTotal, '9,999,999,999') tradeTotal
  		, TO_CHAR(t.tradeIndate, 'YYYY-MM-DD HH24:MI:SS') tradeIndate
  			from trade t, tb_tradeDiv td, customer c, items i, tb_paymentDiv pd
  			where t.tradeNo = #{tradeNo}
  			and
  			td.tradeDiv = t.tradeDiv
  			and
  			c.customerNo = t.customerNo
			and
			i.itemCode = t.itemCode
			and
			pd.paymentDiv = t.paymentDiv
  	</select>
  	
  	<!-- 거래 삭제 -->
  	<delete id="deleteTrade" parameterType="int">
  		delete from Trade
  			where tradeNo = #{tradeNo}
  	</delete>
  	
  	<!-- 거래 정보 수정 -->
  	<update id="updateTrade" parameterType="Trade">
  		update Trade
  		set
  			tradeDiv = (SELECT tradeDiv FROM tb_tradeDiv WHERE tradeExp = '${tradeDiv}')
  			, customerNo = (SELECT customerNo FROM customer WHERE customerName = '${customerNo}')
  			, itemCode = (SELECT itemCode FROM items WHERE itemName = '${itemCode}')
  			, tradeQuantity = #{tradeQuantity}
  			, tradePayable = #{tradePayable}
  			, tradeReceivable = #{tradeReceivable}
  			, tradeTotal = #{tradeTotal}
  			, paymentDiv = (SELECT paymentDiv FROM tb_paymentDiv WHERE paymentExp = '${paymentDiv}')
  			, tradeNote = #{tradeNote}
  		where tradeNo = #{tradeNo}
  	</update>
  	
  	<!-- 거래구분으로 찾기 -->
  	<select id="searchTradeByTdiv" parameterType="Trade" resultType="Trade">
  		select 
  		t.userBn userBn
  		, t.tradeNo tradeNo
  		, td.tradeExp tradeDiv
  		, c.customerName customerNo
  		, i.itemName itemCode
  		, pd.paymentExp paymentDiv
  		, t.tradeNote tradeNote
  		, t.tradeQuantity tradeQuantity
  		, t.tradePayable tradePayable
  		, t.tradeReceivable tradeReceivable
  		, t.tradeTotal tradeTotal
  		, TO_CHAR(t.tradeIndate, 'YYYY-MM-DD') tradeIndate
  			from trade t, tb_tradeDiv td, customer c, items i, tb_paymentDiv pd
  			where t.userBn = #{userBn}
  			and
  			td.tradeDiv = t.tradeDiv
  			and
  			c.customerNo = t.customerNo
			and
			i.itemCode = t.itemCode
			and
			pd.paymentDiv = t.paymentDiv
			and
  			td.tradeDiv = (SELECT tradeDiv FROM tb_tradeDiv WHERE tradeExp = '${tradeDiv}')
  			order by tradeNo DESC
  	</select>
  	
  	<!-- 고객명으로 찾기 -->
  	<select id="searchTradeByCustomer" parameterType="Trade" resultType="Trade">
  		select 
  		t.userBn userBn
  		, t.tradeNo tradeNo
  		, td.tradeExp tradeDiv
  		, c.customerName customerNo
  		, i.itemName itemCode
  		, pd.paymentExp paymentDiv
  		, t.tradeNote tradeNote
  		, t.tradeQuantity tradeQuantity
  		, t.tradePayable tradePayable
  		, t.tradeReceivable tradeReceivable
  		, t.tradeTotal tradeTotal
  		, TO_CHAR(t.tradeIndate, 'YYYY-MM-DD') tradeIndate
  			from trade t, tb_tradeDiv td, customer c, items i, tb_paymentDiv pd
  			where t.userBn = #{userBn}
  			and
  			td.tradeDiv = t.tradeDiv
  			and
  			c.customerNo = t.customerNo
			and
			i.itemCode = t.itemCode
			and
			pd.paymentDiv = t.paymentDiv
			and
  			c.customerNo = (SELECT customerNo FROM customer WHERE customerName = '${customerNo}')
  			order by tradeNo DESC
  	</select>
  	<!-- 품목명으로 찾기 -->
  	<select id="searchTradeByItem" parameterType="Trade" resultType="Trade">
  		select 
  		t.userBn userBn
  		, t.tradeNo tradeNo
  		, td.tradeExp tradeDiv
  		, c.customerName customerNo
  		, i.itemName itemCode
  		, pd.paymentExp paymentDiv
  		, t.tradeNote tradeNote
  		, t.tradeQuantity tradeQuantity
  		, t.tradePayable tradePayable
  		, t.tradeReceivable tradeReceivable
  		, t.tradeTotal tradeTotal
  		, TO_CHAR(t.tradeIndate, 'YYYY-MM-DD') tradeIndate
  			from trade t, tb_tradeDiv td, customer c, items i, tb_paymentDiv pd
  			where t.userBn = #{userBn}
  			and
  			td.tradeDiv = t.tradeDiv
  			and
  			c.customerNo = t.customerNo
			and
			i.itemCode = t.itemCode
			and
			pd.paymentDiv = t.paymentDiv
			and
  			i.itemCode = (SELECT itemCode FROM items WHERE itemName = '${itemCode}')
  			order by tradeNo DESC
  	</select>
  	<!-- 결제수단으로 찾기 -->
  	<select id="searchTradeByPdiv" parameterType="Trade" resultType="Trade">
  		select 
  		t.userBn userBn
  		, t.tradeNo tradeNo
  		, td.tradeExp tradeDiv
  		, c.customerName customerNo
  		, i.itemName itemCode
  		, pd.paymentExp paymentDiv
  		, t.tradeNote tradeNote
  		, t.tradeQuantity tradeQuantity
  		, t.tradePayable tradePayable
  		, t.tradeReceivable tradeReceivable
  		, t.tradeTotal tradeTotal
  		, TO_CHAR(t.tradeIndate, 'YYYY-MM-DD') tradeIndate
  			from trade t, tb_tradeDiv td, customer c, items i, tb_paymentDiv pd
  			where t.userBn = #{userBn}
  			and
  			td.tradeDiv = t.tradeDiv
  			and
  			c.customerNo = t.customerNo
			and
			i.itemCode = t.itemCode
			and
			pd.paymentDiv = t.paymentDiv
			and
  			pd.paymentDiv = (SELECT paymentDiv FROM tb_paymentDiv WHERE paymentExp = '${paymentDiv}')
  			order by tradeNo DESC
  	</select>
  	<!-- 상태별로 찾기 -->
  	<select id="searchTradeByStatus" parameterType="Trade" resultType="Trade">
  		select 
  		t.userBn userBn
  		, t.tradeNo tradeNo
  		, td.tradeExp tradeDiv
  		, c.customerName customerNo
  		, i.itemName itemCode
  		, pd.paymentExp paymentDiv
  		, t.tradeNote tradeNote
  		, t.tradeQuantity tradeQuantity
  		, t.tradePayable tradePayable
  		, t.tradeReceivable tradeReceivable
  		, t.tradeTotal tradeTotal
  		, TO_CHAR(t.tradeIndate, 'YYYY-MM-DD') tradeIndate
  			from trade t, tb_tradeDiv td, customer c, items i, tb_paymentDiv pd
  			where t.userBn = #{userBn}
  			and
  			td.tradeDiv = t.tradeDiv
  			and
  			c.customerNo = t.customerNo
			and
			i.itemCode = t.itemCode
			and
			pd.paymentDiv = t.paymentDiv
  			order by tradeNo DESC
  	</select>
  	
  	<select id="load_account" parameterType="String" resultType="Customer">
  		select * from customer where userBn = #{String}
  	</select>
  	
  	<select id="load_items" parameterType="String" resultType="Item">
  		select * from items where userBn = #{String}
  	</select>
  	
  	<select id="get_cusno" parameterType="int" resultType="String">
  		select customerNo from trade where tradeNo = #{int}
  	</select>
  	
  </mapper>